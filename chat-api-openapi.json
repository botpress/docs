{"openapi":"3.0.0","servers":[{"url":"https://chat.botpress.cloud/{webhookUrl}","variables":{"webhookUrl":{"default":"your_default_webhook_url","description":"The webhook URL"}}}],"info":{"title":"Chat API","description":"API for the Chat Integration","version":"0.0.0"},"paths":{"/conversations/{id}":{"get":{"operationId":"getConversation","description":"Retrieves the [Conversation](#schema_conversation) object for a valid identifier.","parameters":[{"name":"x-user-key","in":"header","description":"Authentication Key","required":true,"schema":{"type":"string"}},{"name":"id","in":"path","description":"Conversation id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Returns a [Conversation](#schema_conversation) object if a valid identifier was provided","content":{"application/json":{"schema":{"type":"object","properties":{"conversation":{"type":"object","properties":{"id":{"type":"string","description":"Identifier of the [Conversation](#schema_conversation)"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [Conversation](#schema_conversation) in ISO 8601 format"},"updatedAt":{"type":"string","format":"date-time","description":"Updating date of the [Conversation](#schema_conversation) in ISO 8601 format"}},"required":["id","createdAt","updatedAt"],"additionalProperties":false,"x-readme-ref-name":"Conversation"}},"required":["conversation"],"title":"getConversationResponse","additionalProperties":false}}}},"default":{"description":"Returns a [Conversation](#schema_conversation) object if a valid identifier was provided","content":{"application/json":{"schema":{"type":"object","properties":{"conversation":{"type":"object","properties":{"id":{"type":"string","description":"Identifier of the [Conversation](#schema_conversation)"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [Conversation](#schema_conversation) in ISO 8601 format"},"updatedAt":{"type":"string","format":"date-time","description":"Updating date of the [Conversation](#schema_conversation) in ISO 8601 format"}},"required":["id","createdAt","updatedAt"],"additionalProperties":false,"x-readme-ref-name":"Conversation"}},"required":["conversation"],"title":"getConversationResponse","additionalProperties":false}}}}},"tags":["Endpoints"],"summary":"Get Conversation"},"delete":{"operationId":"deleteConversation","description":"Permanently deletes a [Conversation](#schema_conversation). It cannot be undone. Also immediately deletes corresponding [Messages](#schema_message).","parameters":[{"name":"x-user-key","in":"header","description":"Authentication Key","required":true,"schema":{"type":"string"}},{"name":"id","in":"path","description":"Conversation id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Returns the [Conversation](#schema_conversation) object that was deleted","content":{"application/json":{"schema":{"type":"object","title":"deleteConversationResponse","additionalProperties":false}}}},"default":{"description":"Returns the [Conversation](#schema_conversation) object that was deleted","content":{"application/json":{"schema":{"type":"object","title":"deleteConversationResponse","additionalProperties":false}}}}},"tags":["Endpoints"],"summary":"Delete Conversation"}},"/conversations":{"post":{"operationId":"createConversation","description":"Creates a new [Conversation](#schema_conversation)","parameters":[{"name":"x-user-key","in":"header","description":"Authentication Key","required":true,"schema":{"type":"string"}}],"responses":{"201":{"description":"Returns a [Conversation](#schema_conversation)","content":{"application/json":{"schema":{"type":"object","properties":{"conversation":{"type":"object","properties":{"id":{"type":"string","description":"Identifier of the [Conversation](#schema_conversation)"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [Conversation](#schema_conversation) in ISO 8601 format"},"updatedAt":{"type":"string","format":"date-time","description":"Updating date of the [Conversation](#schema_conversation) in ISO 8601 format"}},"required":["id","createdAt","updatedAt"],"additionalProperties":false,"x-readme-ref-name":"Conversation"}},"required":["conversation"],"title":"createConversationResponse","additionalProperties":false}}}},"default":{"description":"Returns a [Conversation](#schema_conversation)","content":{"application/json":{"schema":{"type":"object","properties":{"conversation":{"type":"object","properties":{"id":{"type":"string","description":"Identifier of the [Conversation](#schema_conversation)"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [Conversation](#schema_conversation) in ISO 8601 format"},"updatedAt":{"type":"string","format":"date-time","description":"Updating date of the [Conversation](#schema_conversation) in ISO 8601 format"}},"required":["id","createdAt","updatedAt"],"additionalProperties":false,"x-readme-ref-name":"Conversation"}},"required":["conversation"],"title":"createConversationResponse","additionalProperties":false}}}}},"requestBody":{"description":"Conversation data","content":{"application/json":{"schema":{"type":"object","properties":{"id":{"type":"string","description":"Identifier of the [Conversation](#schema_conversation)"}},"title":"createConversationBody","additionalProperties":false}}}},"tags":["Endpoints"],"summary":"Create Conversation"},"get":{"operationId":"listConversations","description":"Returns a list of [Conversation](#schema_conversation) objects","parameters":[{"name":"x-user-key","in":"header","description":"Authentication Key","required":true,"schema":{"type":"string"}},{"name":"nextToken","in":"query","description":"Provide the `meta.nextToken` value provided in the last API response to retrieve the next page of results","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Returns a list of [Conversation](#schema_conversation) objects","content":{"application/json":{"schema":{"type":"object","properties":{"conversations":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","description":"Identifier of the [Conversation](#schema_conversation)"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [Conversation](#schema_conversation) in ISO 8601 format"},"updatedAt":{"type":"string","format":"date-time","description":"Updating date of the [Conversation](#schema_conversation) in ISO 8601 format"}},"required":["id","createdAt","updatedAt"]}},"meta":{"type":"object","properties":{"nextToken":{"type":"string","description":"The token to use to retrieve the next page of results, passed as a query string parameter (value should be URL-encoded) to this API endpoint."}},"additionalProperties":false}},"required":["conversations","meta"],"title":"listConversationsResponse","additionalProperties":false}}}},"default":{"description":"Returns a list of [Conversation](#schema_conversation) objects","content":{"application/json":{"schema":{"type":"object","properties":{"conversations":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","description":"Identifier of the [Conversation](#schema_conversation)"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [Conversation](#schema_conversation) in ISO 8601 format"},"updatedAt":{"type":"string","format":"date-time","description":"Updating date of the [Conversation](#schema_conversation) in ISO 8601 format"}},"required":["id","createdAt","updatedAt"]}},"meta":{"type":"object","properties":{"nextToken":{"type":"string","description":"The token to use to retrieve the next page of results, passed as a query string parameter (value should be URL-encoded) to this API endpoint."}},"additionalProperties":false}},"required":["conversations","meta"],"title":"listConversationsResponse","additionalProperties":false}}}}},"tags":["Endpoints"],"summary":"List Conversations"}},"/conversations/get-or-create":{"post":{"operationId":"getOrCreateConversation","description":"Get or create a new [Conversation](#schema_conversation)","parameters":[{"name":"x-user-key","in":"header","description":"Authentication Key","required":true,"schema":{"type":"string"}}],"responses":{"201":{"description":"Returns a [Conversation](#schema_conversation)","content":{"application/json":{"schema":{"type":"object","properties":{"conversation":{"type":"object","properties":{"id":{"type":"string","description":"Identifier of the [Conversation](#schema_conversation)"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [Conversation](#schema_conversation) in ISO 8601 format"},"updatedAt":{"type":"string","format":"date-time","description":"Updating date of the [Conversation](#schema_conversation) in ISO 8601 format"}},"required":["id","createdAt","updatedAt"],"additionalProperties":false,"x-readme-ref-name":"Conversation"}},"required":["conversation"],"title":"getOrCreateConversationResponse","additionalProperties":false}}}},"default":{"description":"Returns a [Conversation](#schema_conversation)","content":{"application/json":{"schema":{"type":"object","properties":{"conversation":{"type":"object","properties":{"id":{"type":"string","description":"Identifier of the [Conversation](#schema_conversation)"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [Conversation](#schema_conversation) in ISO 8601 format"},"updatedAt":{"type":"string","format":"date-time","description":"Updating date of the [Conversation](#schema_conversation) in ISO 8601 format"}},"required":["id","createdAt","updatedAt"],"additionalProperties":false,"x-readme-ref-name":"Conversation"}},"required":["conversation"],"title":"getOrCreateConversationResponse","additionalProperties":false}}}}},"requestBody":{"description":"Conversation data","content":{"application/json":{"schema":{"type":"object","properties":{"id":{"type":"string","description":"Identifier of the [Conversation](#schema_conversation)"}},"required":["id"],"title":"getOrCreateConversationBody","additionalProperties":false}}}},"tags":["Endpoints"],"summary":"Get Or Create Conversation"}},"/conversations/{id}/listen":{"get":{"operationId":"listenConversation","description":"Creates a SSE stream to receive messages and events from a conversation","parameters":[{"name":"x-user-key","in":"header","description":"Authentication Key","required":true,"schema":{"type":"string"}},{"name":"id","in":"path","description":"Conversation id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Returns nothing but a stream","content":{"application/json":{"schema":{"type":"object","title":"listenConversationResponse","additionalProperties":false}}}},"default":{"description":"Returns nothing but a stream","content":{"application/json":{"schema":{"type":"object","title":"listenConversationResponse","additionalProperties":false}}}}},"tags":["Endpoints"],"summary":"Listen Conversation"}},"/conversations/{conversationId}/messages":{"get":{"operationId":"listMessages","description":"Retrieves the conversation's [Messages](#schema_message)","parameters":[{"name":"x-user-key","in":"header","description":"Authentication Key","required":true,"schema":{"type":"string"}},{"name":"nextToken","in":"query","description":"Provide the `meta.nextToken` value provided in the last API response to retrieve the next page of results","required":false,"schema":{"type":"string"}},{"name":"conversationId","in":"path","description":"Conversation id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Returns a list of [Message](#schema_message) objects","content":{"application/json":{"schema":{"type":"object","properties":{"messages":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","description":"Identifier of the [Message](#schema_message)"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [Message](#schema_message) in ISO 8601 format"},"payload":{"oneOf":[{"type":"object","properties":{"audioUrl":{"type":"string","minLength":1},"type":{"type":"string","enum":["audio"]}},"required":["audioUrl","type"]},{"type":"object","properties":{"title":{"type":"string","minLength":1},"subtitle":{"type":"string","minLength":1},"imageUrl":{"type":"string","minLength":1},"actions":{"type":"array","items":{"type":"object","properties":{"action":{"type":"string","enum":["postback","url","say"]},"label":{"type":"string","minLength":1},"value":{"type":"string","minLength":1}},"required":["action","label","value"]}},"type":{"type":"string","enum":["card"]}},"required":["title","actions","type"]},{"type":"object","properties":{"items":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","minLength":1},"subtitle":{"type":"string","minLength":1},"imageUrl":{"type":"string","minLength":1},"actions":{"type":"array","items":{"type":"object","properties":{"action":{"type":"string","enum":["postback","url","say"]},"label":{"type":"string","minLength":1},"value":{"type":"string","minLength":1}},"required":["action","label","value"]}}},"required":["title","actions"]}},"type":{"type":"string","enum":["carousel"]}},"required":["items","type"]},{"type":"object","properties":{"text":{"type":"string","minLength":1},"options":{"type":"array","items":{"type":"object","properties":{"label":{"type":"string","minLength":1},"value":{"type":"string","minLength":1}},"required":["label","value"]}},"type":{"type":"string","enum":["choice"]}},"required":["text","options","type"]},{"type":"object","properties":{"text":{"type":"string","minLength":1},"options":{"type":"array","items":{"type":"object","properties":{"label":{"type":"string","minLength":1},"value":{"type":"string","minLength":1}},"required":["label","value"]}},"type":{"type":"string","enum":["dropdown"]}},"required":["text","options","type"]},{"type":"object","properties":{"fileUrl":{"type":"string","minLength":1},"title":{"type":"string","minLength":1},"type":{"type":"string","enum":["file"]}},"required":["fileUrl","type"]},{"type":"object","properties":{"imageUrl":{"type":"string","minLength":1},"type":{"type":"string","enum":["image"]}},"required":["imageUrl","type"]},{"type":"object","properties":{"latitude":{"type":"number"},"longitude":{"type":"number"},"address":{"type":"string"},"title":{"type":"string"},"type":{"type":"string","enum":["location"]}},"required":["latitude","longitude","type"]},{"type":"object","properties":{"markdown":{"type":"string","minLength":1},"type":{"type":"string","enum":["markdown"]}},"required":["markdown","type"]},{"type":"object","properties":{"text":{"type":"string","minLength":1},"type":{"type":"string","enum":["text"]}},"required":["text","type"]},{"type":"object","properties":{"videoUrl":{"type":"string","minLength":1},"type":{"type":"string","enum":["video"]}},"required":["videoUrl","type"]}],"description":"Payload is the content type of the message."},"userId":{"type":"string","description":"ID of the [User](#schema_user)"},"conversationId":{"type":"string","description":"ID of the [Conversation](#schema_conversation)"}},"required":["id","createdAt","payload","userId","conversationId"],"description":"The Message object represents a message in a [Conversation](#schema_conversation) for a specific [User](#schema_user).","additionalProperties":false,"x-readme-ref-name":"Message"}},"meta":{"type":"object","properties":{"nextToken":{"type":"string","description":"The token to use to retrieve the next page of results, passed as a query string parameter (value should be URL-encoded) to this API endpoint."}},"additionalProperties":false}},"required":["messages","meta"],"title":"listMessagesResponse","additionalProperties":false}}}},"default":{"description":"Returns a list of [Message](#schema_message) objects","content":{"application/json":{"schema":{"type":"object","properties":{"messages":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","description":"Identifier of the [Message](#schema_message)"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [Message](#schema_message) in ISO 8601 format"},"payload":{"oneOf":[{"type":"object","properties":{"audioUrl":{"type":"string","minLength":1},"type":{"type":"string","enum":["audio"]}},"required":["audioUrl","type"]},{"type":"object","properties":{"title":{"type":"string","minLength":1},"subtitle":{"type":"string","minLength":1},"imageUrl":{"type":"string","minLength":1},"actions":{"type":"array","items":{"type":"object","properties":{"action":{"type":"string","enum":["postback","url","say"]},"label":{"type":"string","minLength":1},"value":{"type":"string","minLength":1}},"required":["action","label","value"]}},"type":{"type":"string","enum":["card"]}},"required":["title","actions","type"]},{"type":"object","properties":{"items":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","minLength":1},"subtitle":{"type":"string","minLength":1},"imageUrl":{"type":"string","minLength":1},"actions":{"type":"array","items":{"type":"object","properties":{"action":{"type":"string","enum":["postback","url","say"]},"label":{"type":"string","minLength":1},"value":{"type":"string","minLength":1}},"required":["action","label","value"]}}},"required":["title","actions"]}},"type":{"type":"string","enum":["carousel"]}},"required":["items","type"]},{"type":"object","properties":{"text":{"type":"string","minLength":1},"options":{"type":"array","items":{"type":"object","properties":{"label":{"type":"string","minLength":1},"value":{"type":"string","minLength":1}},"required":["label","value"]}},"type":{"type":"string","enum":["choice"]}},"required":["text","options","type"]},{"type":"object","properties":{"text":{"type":"string","minLength":1},"options":{"type":"array","items":{"type":"object","properties":{"label":{"type":"string","minLength":1},"value":{"type":"string","minLength":1}},"required":["label","value"]}},"type":{"type":"string","enum":["dropdown"]}},"required":["text","options","type"]},{"type":"object","properties":{"fileUrl":{"type":"string","minLength":1},"title":{"type":"string","minLength":1},"type":{"type":"string","enum":["file"]}},"required":["fileUrl","type"]},{"type":"object","properties":{"imageUrl":{"type":"string","minLength":1},"type":{"type":"string","enum":["image"]}},"required":["imageUrl","type"]},{"type":"object","properties":{"latitude":{"type":"number"},"longitude":{"type":"number"},"address":{"type":"string"},"title":{"type":"string"},"type":{"type":"string","enum":["location"]}},"required":["latitude","longitude","type"]},{"type":"object","properties":{"markdown":{"type":"string","minLength":1},"type":{"type":"string","enum":["markdown"]}},"required":["markdown","type"]},{"type":"object","properties":{"text":{"type":"string","minLength":1},"type":{"type":"string","enum":["text"]}},"required":["text","type"]},{"type":"object","properties":{"videoUrl":{"type":"string","minLength":1},"type":{"type":"string","enum":["video"]}},"required":["videoUrl","type"]}],"description":"Payload is the content type of the message."},"userId":{"type":"string","description":"ID of the [User](#schema_user)"},"conversationId":{"type":"string","description":"ID of the [Conversation](#schema_conversation)"}},"required":["id","createdAt","payload","userId","conversationId"],"description":"The Message object represents a message in a [Conversation](#schema_conversation) for a specific [User](#schema_user).","additionalProperties":false,"x-readme-ref-name":"Message"}},"meta":{"type":"object","properties":{"nextToken":{"type":"string","description":"The token to use to retrieve the next page of results, passed as a query string parameter (value should be URL-encoded) to this API endpoint."}},"additionalProperties":false}},"required":["messages","meta"],"title":"listMessagesResponse","additionalProperties":false}}}}},"tags":["Endpoints"],"summary":"List Messages"}},"/conversations/{conversationId}/participants":{"post":{"operationId":"addParticipant","description":"Add a [Participant](#schema_user) to a [Conversation](#schema_conversation).","parameters":[{"name":"x-user-key","in":"header","description":"Authentication Key","required":true,"schema":{"type":"string"}},{"name":"conversationId","in":"path","description":"Conversation id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Returns the [Participant](#schema_user) object","content":{"application/json":{"schema":{"type":"object","properties":{"participant":{"type":"object","properties":{"id":{"type":"string","description":"Identifier of the [User](#schema_user)"},"name":{"type":"string","description":"Name of the [User](#schema_user)"},"pictureUrl":{"type":"string","description":"Picture url of the [User](#schema_user)"},"profile":{"type":"string","description":"Custom profile data of the [User](#schema_user) encoded as a string"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [User](#schema_user) in ISO 8601 format"},"updatedAt":{"type":"string","format":"date-time","description":"Updating date of the [User](#schema_user) in ISO 8601 format"}},"required":["id","createdAt","updatedAt"],"description":"The user object represents someone interacting with the bot within a specific integration. The same person interacting with a bot in slack and messenger will be represented with two different users.","additionalProperties":false,"x-readme-ref-name":"User"}},"required":["participant"],"title":"addParticipantResponse","additionalProperties":false}}}},"default":{"description":"Returns the [Participant](#schema_user) object","content":{"application/json":{"schema":{"type":"object","properties":{"participant":{"type":"object","properties":{"id":{"type":"string","description":"Identifier of the [User](#schema_user)"},"name":{"type":"string","description":"Name of the [User](#schema_user)"},"pictureUrl":{"type":"string","description":"Picture url of the [User](#schema_user)"},"profile":{"type":"string","description":"Custom profile data of the [User](#schema_user) encoded as a string"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [User](#schema_user) in ISO 8601 format"},"updatedAt":{"type":"string","format":"date-time","description":"Updating date of the [User](#schema_user) in ISO 8601 format"}},"required":["id","createdAt","updatedAt"],"description":"The user object represents someone interacting with the bot within a specific integration. The same person interacting with a bot in slack and messenger will be represented with two different users.","additionalProperties":false,"x-readme-ref-name":"User"}},"required":["participant"],"title":"addParticipantResponse","additionalProperties":false}}}}},"requestBody":{"description":"Participant data","content":{"application/json":{"schema":{"type":"object","properties":{"userId":{"type":"string","description":"User id"}},"required":["userId"],"title":"addParticipantBody","additionalProperties":false}}}},"tags":["Endpoints"],"summary":"Add Participant"},"get":{"operationId":"listParticipants","description":"Retrieves a list of [Participants](#schema_user) for a given [Conversation](#schema_conversation).","parameters":[{"name":"x-user-key","in":"header","description":"Authentication Key","required":true,"schema":{"type":"string"}},{"name":"nextToken","in":"query","description":"Provide the `meta.nextToken` value provided in the last API response to retrieve the next page of results","required":false,"schema":{"type":"string"}},{"name":"conversationId","in":"path","description":"Conversation id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Returns a list of [Participants](#schema_user) objects","content":{"application/json":{"schema":{"type":"object","properties":{"participants":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","description":"Identifier of the [User](#schema_user)"},"name":{"type":"string","description":"Name of the [User](#schema_user)"},"pictureUrl":{"type":"string","description":"Picture url of the [User](#schema_user)"},"profile":{"type":"string","description":"Custom profile data of the [User](#schema_user) encoded as a string"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [User](#schema_user) in ISO 8601 format"},"updatedAt":{"type":"string","format":"date-time","description":"Updating date of the [User](#schema_user) in ISO 8601 format"}},"required":["id","createdAt","updatedAt"],"description":"The user object represents someone interacting with the bot within a specific integration. The same person interacting with a bot in slack and messenger will be represented with two different users.","additionalProperties":false,"x-readme-ref-name":"User"}},"meta":{"type":"object","properties":{"nextToken":{"type":"string","description":"The token to use to retrieve the next page of results, passed as a query string parameter (value should be URL-encoded) to this API endpoint."}},"additionalProperties":false}},"required":["participants","meta"],"title":"listParticipantsResponse","additionalProperties":false}}}},"default":{"description":"Returns a list of [Participants](#schema_user) objects","content":{"application/json":{"schema":{"type":"object","properties":{"participants":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","description":"Identifier of the [User](#schema_user)"},"name":{"type":"string","description":"Name of the [User](#schema_user)"},"pictureUrl":{"type":"string","description":"Picture url of the [User](#schema_user)"},"profile":{"type":"string","description":"Custom profile data of the [User](#schema_user) encoded as a string"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [User](#schema_user) in ISO 8601 format"},"updatedAt":{"type":"string","format":"date-time","description":"Updating date of the [User](#schema_user) in ISO 8601 format"}},"required":["id","createdAt","updatedAt"],"description":"The user object represents someone interacting with the bot within a specific integration. The same person interacting with a bot in slack and messenger will be represented with two different users.","additionalProperties":false,"x-readme-ref-name":"User"}},"meta":{"type":"object","properties":{"nextToken":{"type":"string","description":"The token to use to retrieve the next page of results, passed as a query string parameter (value should be URL-encoded) to this API endpoint."}},"additionalProperties":false}},"required":["participants","meta"],"title":"listParticipantsResponse","additionalProperties":false}}}}},"tags":["Endpoints"],"summary":"List Participants"}},"/conversations/{conversationId}/participants/{userId}":{"delete":{"operationId":"removeParticipant","description":"Remove a [Participant](#schema_user) from a [Conversation](#schema_conversation).","parameters":[{"name":"x-user-key","in":"header","description":"Authentication Key","required":true,"schema":{"type":"string"}},{"name":"conversationId","in":"path","description":"Conversation id","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Returns an empty object","content":{"application/json":{"schema":{"type":"object","title":"removeParticipantResponse","additionalProperties":false}}}},"default":{"description":"Returns an empty object","content":{"application/json":{"schema":{"type":"object","title":"removeParticipantResponse","additionalProperties":false}}}}},"tags":["Endpoints"],"summary":"Remove Participant"},"get":{"operationId":"getParticipant","description":"Retrieves a [Participant](#schema_user) from a [Conversation](#schema_conversation).","parameters":[{"name":"x-user-key","in":"header","description":"Authentication Key","required":true,"schema":{"type":"string"}},{"name":"conversationId","in":"path","description":"Conversation id","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Returns the [Participant](#schema_user) object","content":{"application/json":{"schema":{"type":"object","properties":{"participant":{"type":"object","properties":{"id":{"type":"string","description":"Identifier of the [User](#schema_user)"},"name":{"type":"string","description":"Name of the [User](#schema_user)"},"pictureUrl":{"type":"string","description":"Picture url of the [User](#schema_user)"},"profile":{"type":"string","description":"Custom profile data of the [User](#schema_user) encoded as a string"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [User](#schema_user) in ISO 8601 format"},"updatedAt":{"type":"string","format":"date-time","description":"Updating date of the [User](#schema_user) in ISO 8601 format"}},"required":["id","createdAt","updatedAt"],"description":"The user object represents someone interacting with the bot within a specific integration. The same person interacting with a bot in slack and messenger will be represented with two different users.","additionalProperties":false,"x-readme-ref-name":"User"}},"required":["participant"],"title":"getParticipantResponse","additionalProperties":false}}}},"default":{"description":"Returns the [Participant](#schema_user) object","content":{"application/json":{"schema":{"type":"object","properties":{"participant":{"type":"object","properties":{"id":{"type":"string","description":"Identifier of the [User](#schema_user)"},"name":{"type":"string","description":"Name of the [User](#schema_user)"},"pictureUrl":{"type":"string","description":"Picture url of the [User](#schema_user)"},"profile":{"type":"string","description":"Custom profile data of the [User](#schema_user) encoded as a string"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [User](#schema_user) in ISO 8601 format"},"updatedAt":{"type":"string","format":"date-time","description":"Updating date of the [User](#schema_user) in ISO 8601 format"}},"required":["id","createdAt","updatedAt"],"description":"The user object represents someone interacting with the bot within a specific integration. The same person interacting with a bot in slack and messenger will be represented with two different users.","additionalProperties":false,"x-readme-ref-name":"User"}},"required":["participant"],"title":"getParticipantResponse","additionalProperties":false}}}}},"tags":["Endpoints"],"summary":"Get Participant"}},"/messages/{id}":{"get":{"operationId":"getMessage","description":"Retrieves the [Message](#schema_message) object for a valid identifier.","parameters":[{"name":"x-user-key","in":"header","description":"Authentication Key","required":true,"schema":{"type":"string"}},{"name":"id","in":"path","description":"Id of the Message","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Returns a [Message](#schema_message) object if a valid identifier was provided","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"object","properties":{"id":{"type":"string","description":"Identifier of the [Message](#schema_message)"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [Message](#schema_message) in ISO 8601 format"},"payload":{"oneOf":[{"type":"object","properties":{"audioUrl":{"type":"string","minLength":1},"type":{"type":"string","enum":["audio"]}},"required":["audioUrl","type"]},{"type":"object","properties":{"title":{"type":"string","minLength":1},"subtitle":{"type":"string","minLength":1},"imageUrl":{"type":"string","minLength":1},"actions":{"type":"array","items":{"type":"object","properties":{"action":{"type":"string","enum":["postback","url","say"]},"label":{"type":"string","minLength":1},"value":{"type":"string","minLength":1}},"required":["action","label","value"]}},"type":{"type":"string","enum":["card"]}},"required":["title","actions","type"]},{"type":"object","properties":{"items":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","minLength":1},"subtitle":{"type":"string","minLength":1},"imageUrl":{"type":"string","minLength":1},"actions":{"type":"array","items":{"type":"object","properties":{"action":{"type":"string","enum":["postback","url","say"]},"label":{"type":"string","minLength":1},"value":{"type":"string","minLength":1}},"required":["action","label","value"]}}},"required":["title","actions"]}},"type":{"type":"string","enum":["carousel"]}},"required":["items","type"]},{"type":"object","properties":{"text":{"type":"string","minLength":1},"options":{"type":"array","items":{"type":"object","properties":{"label":{"type":"string","minLength":1},"value":{"type":"string","minLength":1}},"required":["label","value"]}},"type":{"type":"string","enum":["choice"]}},"required":["text","options","type"]},{"type":"object","properties":{"text":{"type":"string","minLength":1},"options":{"type":"array","items":{"type":"object","properties":{"label":{"type":"string","minLength":1},"value":{"type":"string","minLength":1}},"required":["label","value"]}},"type":{"type":"string","enum":["dropdown"]}},"required":["text","options","type"]},{"type":"object","properties":{"fileUrl":{"type":"string","minLength":1},"title":{"type":"string","minLength":1},"type":{"type":"string","enum":["file"]}},"required":["fileUrl","type"]},{"type":"object","properties":{"imageUrl":{"type":"string","minLength":1},"type":{"type":"string","enum":["image"]}},"required":["imageUrl","type"]},{"type":"object","properties":{"latitude":{"type":"number"},"longitude":{"type":"number"},"address":{"type":"string"},"title":{"type":"string"},"type":{"type":"string","enum":["location"]}},"required":["latitude","longitude","type"]},{"type":"object","properties":{"markdown":{"type":"string","minLength":1},"type":{"type":"string","enum":["markdown"]}},"required":["markdown","type"]},{"type":"object","properties":{"text":{"type":"string","minLength":1},"type":{"type":"string","enum":["text"]}},"required":["text","type"]},{"type":"object","properties":{"videoUrl":{"type":"string","minLength":1},"type":{"type":"string","enum":["video"]}},"required":["videoUrl","type"]}],"description":"Payload is the content type of the message."},"userId":{"type":"string","description":"ID of the [User](#schema_user)"},"conversationId":{"type":"string","description":"ID of the [Conversation](#schema_conversation)"}},"required":["id","createdAt","payload","userId","conversationId"],"description":"The Message object represents a message in a [Conversation](#schema_conversation) for a specific [User](#schema_user).","additionalProperties":false,"x-readme-ref-name":"Message"}},"required":["message"],"title":"getMessageResponse","additionalProperties":false}}}},"default":{"description":"Returns a [Message](#schema_message) object if a valid identifier was provided","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"object","properties":{"id":{"type":"string","description":"Identifier of the [Message](#schema_message)"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [Message](#schema_message) in ISO 8601 format"},"payload":{"oneOf":[{"type":"object","properties":{"audioUrl":{"type":"string","minLength":1},"type":{"type":"string","enum":["audio"]}},"required":["audioUrl","type"]},{"type":"object","properties":{"title":{"type":"string","minLength":1},"subtitle":{"type":"string","minLength":1},"imageUrl":{"type":"string","minLength":1},"actions":{"type":"array","items":{"type":"object","properties":{"action":{"type":"string","enum":["postback","url","say"]},"label":{"type":"string","minLength":1},"value":{"type":"string","minLength":1}},"required":["action","label","value"]}},"type":{"type":"string","enum":["card"]}},"required":["title","actions","type"]},{"type":"object","properties":{"items":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","minLength":1},"subtitle":{"type":"string","minLength":1},"imageUrl":{"type":"string","minLength":1},"actions":{"type":"array","items":{"type":"object","properties":{"action":{"type":"string","enum":["postback","url","say"]},"label":{"type":"string","minLength":1},"value":{"type":"string","minLength":1}},"required":["action","label","value"]}}},"required":["title","actions"]}},"type":{"type":"string","enum":["carousel"]}},"required":["items","type"]},{"type":"object","properties":{"text":{"type":"string","minLength":1},"options":{"type":"array","items":{"type":"object","properties":{"label":{"type":"string","minLength":1},"value":{"type":"string","minLength":1}},"required":["label","value"]}},"type":{"type":"string","enum":["choice"]}},"required":["text","options","type"]},{"type":"object","properties":{"text":{"type":"string","minLength":1},"options":{"type":"array","items":{"type":"object","properties":{"label":{"type":"string","minLength":1},"value":{"type":"string","minLength":1}},"required":["label","value"]}},"type":{"type":"string","enum":["dropdown"]}},"required":["text","options","type"]},{"type":"object","properties":{"fileUrl":{"type":"string","minLength":1},"title":{"type":"string","minLength":1},"type":{"type":"string","enum":["file"]}},"required":["fileUrl","type"]},{"type":"object","properties":{"imageUrl":{"type":"string","minLength":1},"type":{"type":"string","enum":["image"]}},"required":["imageUrl","type"]},{"type":"object","properties":{"latitude":{"type":"number"},"longitude":{"type":"number"},"address":{"type":"string"},"title":{"type":"string"},"type":{"type":"string","enum":["location"]}},"required":["latitude","longitude","type"]},{"type":"object","properties":{"markdown":{"type":"string","minLength":1},"type":{"type":"string","enum":["markdown"]}},"required":["markdown","type"]},{"type":"object","properties":{"text":{"type":"string","minLength":1},"type":{"type":"string","enum":["text"]}},"required":["text","type"]},{"type":"object","properties":{"videoUrl":{"type":"string","minLength":1},"type":{"type":"string","enum":["video"]}},"required":["videoUrl","type"]}],"description":"Payload is the content type of the message."},"userId":{"type":"string","description":"ID of the [User](#schema_user)"},"conversationId":{"type":"string","description":"ID of the [Conversation](#schema_conversation)"}},"required":["id","createdAt","payload","userId","conversationId"],"description":"The Message object represents a message in a [Conversation](#schema_conversation) for a specific [User](#schema_user).","additionalProperties":false,"x-readme-ref-name":"Message"}},"required":["message"],"title":"getMessageResponse","additionalProperties":false}}}}},"tags":["Endpoints"],"summary":"Get Message"},"delete":{"operationId":"deleteMessage","description":"Permanently deletes a [Message](#schema_message). It cannot be undone.","parameters":[{"name":"x-user-key","in":"header","description":"Authentication Key","required":true,"schema":{"type":"string"}},{"name":"id","in":"path","description":"Message id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Returns the [Message](#schema_message) object that was deleted","content":{"application/json":{"schema":{"type":"object","title":"deleteMessageResponse","additionalProperties":false}}}},"default":{"description":"Returns the [Message](#schema_message) object that was deleted","content":{"application/json":{"schema":{"type":"object","title":"deleteMessageResponse","additionalProperties":false}}}}},"tags":["Endpoints"],"summary":"Delete Message"}},"/messages":{"post":{"operationId":"createMessage","description":"Creates a new [Message](#schema_message)","parameters":[{"name":"x-user-key","in":"header","description":"Authentication Key","required":true,"schema":{"type":"string"}}],"responses":{"201":{"description":"Returns a [Message](#schema_message).","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"object","properties":{"id":{"type":"string","description":"Identifier of the [Message](#schema_message)"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [Message](#schema_message) in ISO 8601 format"},"payload":{"oneOf":[{"type":"object","properties":{"audioUrl":{"type":"string","minLength":1},"type":{"type":"string","enum":["audio"]}},"required":["audioUrl","type"]},{"type":"object","properties":{"title":{"type":"string","minLength":1},"subtitle":{"type":"string","minLength":1},"imageUrl":{"type":"string","minLength":1},"actions":{"type":"array","items":{"type":"object","properties":{"action":{"type":"string","enum":["postback","url","say"]},"label":{"type":"string","minLength":1},"value":{"type":"string","minLength":1}},"required":["action","label","value"]}},"type":{"type":"string","enum":["card"]}},"required":["title","actions","type"]},{"type":"object","properties":{"items":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","minLength":1},"subtitle":{"type":"string","minLength":1},"imageUrl":{"type":"string","minLength":1},"actions":{"type":"array","items":{"type":"object","properties":{"action":{"type":"string","enum":["postback","url","say"]},"label":{"type":"string","minLength":1},"value":{"type":"string","minLength":1}},"required":["action","label","value"]}}},"required":["title","actions"]}},"type":{"type":"string","enum":["carousel"]}},"required":["items","type"]},{"type":"object","properties":{"text":{"type":"string","minLength":1},"options":{"type":"array","items":{"type":"object","properties":{"label":{"type":"string","minLength":1},"value":{"type":"string","minLength":1}},"required":["label","value"]}},"type":{"type":"string","enum":["choice"]}},"required":["text","options","type"]},{"type":"object","properties":{"text":{"type":"string","minLength":1},"options":{"type":"array","items":{"type":"object","properties":{"label":{"type":"string","minLength":1},"value":{"type":"string","minLength":1}},"required":["label","value"]}},"type":{"type":"string","enum":["dropdown"]}},"required":["text","options","type"]},{"type":"object","properties":{"fileUrl":{"type":"string","minLength":1},"title":{"type":"string","minLength":1},"type":{"type":"string","enum":["file"]}},"required":["fileUrl","type"]},{"type":"object","properties":{"imageUrl":{"type":"string","minLength":1},"type":{"type":"string","enum":["image"]}},"required":["imageUrl","type"]},{"type":"object","properties":{"latitude":{"type":"number"},"longitude":{"type":"number"},"address":{"type":"string"},"title":{"type":"string"},"type":{"type":"string","enum":["location"]}},"required":["latitude","longitude","type"]},{"type":"object","properties":{"markdown":{"type":"string","minLength":1},"type":{"type":"string","enum":["markdown"]}},"required":["markdown","type"]},{"type":"object","properties":{"text":{"type":"string","minLength":1},"type":{"type":"string","enum":["text"]}},"required":["text","type"]},{"type":"object","properties":{"videoUrl":{"type":"string","minLength":1},"type":{"type":"string","enum":["video"]}},"required":["videoUrl","type"]}],"description":"Payload is the content type of the message."},"userId":{"type":"string","description":"ID of the [User](#schema_user)"},"conversationId":{"type":"string","description":"ID of the [Conversation](#schema_conversation)"}},"required":["id","createdAt","payload","userId","conversationId"],"description":"The Message object represents a message in a [Conversation](#schema_conversation) for a specific [User](#schema_user).","additionalProperties":false,"x-readme-ref-name":"Message"}},"required":["message"],"title":"createMessageResponse","additionalProperties":false}}}},"default":{"description":"Returns a [Message](#schema_message).","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"object","properties":{"id":{"type":"string","description":"Identifier of the [Message](#schema_message)"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [Message](#schema_message) in ISO 8601 format"},"payload":{"oneOf":[{"type":"object","properties":{"audioUrl":{"type":"string","minLength":1},"type":{"type":"string","enum":["audio"]}},"required":["audioUrl","type"]},{"type":"object","properties":{"title":{"type":"string","minLength":1},"subtitle":{"type":"string","minLength":1},"imageUrl":{"type":"string","minLength":1},"actions":{"type":"array","items":{"type":"object","properties":{"action":{"type":"string","enum":["postback","url","say"]},"label":{"type":"string","minLength":1},"value":{"type":"string","minLength":1}},"required":["action","label","value"]}},"type":{"type":"string","enum":["card"]}},"required":["title","actions","type"]},{"type":"object","properties":{"items":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","minLength":1},"subtitle":{"type":"string","minLength":1},"imageUrl":{"type":"string","minLength":1},"actions":{"type":"array","items":{"type":"object","properties":{"action":{"type":"string","enum":["postback","url","say"]},"label":{"type":"string","minLength":1},"value":{"type":"string","minLength":1}},"required":["action","label","value"]}}},"required":["title","actions"]}},"type":{"type":"string","enum":["carousel"]}},"required":["items","type"]},{"type":"object","properties":{"text":{"type":"string","minLength":1},"options":{"type":"array","items":{"type":"object","properties":{"label":{"type":"string","minLength":1},"value":{"type":"string","minLength":1}},"required":["label","value"]}},"type":{"type":"string","enum":["choice"]}},"required":["text","options","type"]},{"type":"object","properties":{"text":{"type":"string","minLength":1},"options":{"type":"array","items":{"type":"object","properties":{"label":{"type":"string","minLength":1},"value":{"type":"string","minLength":1}},"required":["label","value"]}},"type":{"type":"string","enum":["dropdown"]}},"required":["text","options","type"]},{"type":"object","properties":{"fileUrl":{"type":"string","minLength":1},"title":{"type":"string","minLength":1},"type":{"type":"string","enum":["file"]}},"required":["fileUrl","type"]},{"type":"object","properties":{"imageUrl":{"type":"string","minLength":1},"type":{"type":"string","enum":["image"]}},"required":["imageUrl","type"]},{"type":"object","properties":{"latitude":{"type":"number"},"longitude":{"type":"number"},"address":{"type":"string"},"title":{"type":"string"},"type":{"type":"string","enum":["location"]}},"required":["latitude","longitude","type"]},{"type":"object","properties":{"markdown":{"type":"string","minLength":1},"type":{"type":"string","enum":["markdown"]}},"required":["markdown","type"]},{"type":"object","properties":{"text":{"type":"string","minLength":1},"type":{"type":"string","enum":["text"]}},"required":["text","type"]},{"type":"object","properties":{"videoUrl":{"type":"string","minLength":1},"type":{"type":"string","enum":["video"]}},"required":["videoUrl","type"]}],"description":"Payload is the content type of the message."},"userId":{"type":"string","description":"ID of the [User](#schema_user)"},"conversationId":{"type":"string","description":"ID of the [Conversation](#schema_conversation)"}},"required":["id","createdAt","payload","userId","conversationId"],"description":"The Message object represents a message in a [Conversation](#schema_conversation) for a specific [User](#schema_user).","additionalProperties":false,"x-readme-ref-name":"Message"}},"required":["message"],"title":"createMessageResponse","additionalProperties":false}}}}},"requestBody":{"description":"Message data","content":{"application/json":{"schema":{"type":"object","properties":{"payload":{"oneOf":[{"type":"object","properties":{"audioUrl":{"type":"string","minLength":1},"type":{"type":"string","enum":["audio"]}},"required":["audioUrl","type"]},{"type":"object","properties":{"title":{"type":"string","minLength":1},"subtitle":{"type":"string","minLength":1},"imageUrl":{"type":"string","minLength":1},"actions":{"type":"array","items":{"type":"object","properties":{"action":{"type":"string","enum":["postback","url","say"]},"label":{"type":"string","minLength":1},"value":{"type":"string","minLength":1}},"required":["action","label","value"]}},"type":{"type":"string","enum":["card"]}},"required":["title","actions","type"]},{"type":"object","properties":{"items":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","minLength":1},"subtitle":{"type":"string","minLength":1},"imageUrl":{"type":"string","minLength":1},"actions":{"type":"array","items":{"type":"object","properties":{"action":{"type":"string","enum":["postback","url","say"]},"label":{"type":"string","minLength":1},"value":{"type":"string","minLength":1}},"required":["action","label","value"]}}},"required":["title","actions"]}},"type":{"type":"string","enum":["carousel"]}},"required":["items","type"]},{"type":"object","properties":{"text":{"type":"string","minLength":1},"options":{"type":"array","items":{"type":"object","properties":{"label":{"type":"string","minLength":1},"value":{"type":"string","minLength":1}},"required":["label","value"]}},"type":{"type":"string","enum":["choice"]}},"required":["text","options","type"]},{"type":"object","properties":{"text":{"type":"string","minLength":1},"options":{"type":"array","items":{"type":"object","properties":{"label":{"type":"string","minLength":1},"value":{"type":"string","minLength":1}},"required":["label","value"]}},"type":{"type":"string","enum":["dropdown"]}},"required":["text","options","type"]},{"type":"object","properties":{"fileUrl":{"type":"string","minLength":1},"title":{"type":"string","minLength":1},"type":{"type":"string","enum":["file"]}},"required":["fileUrl","type"]},{"type":"object","properties":{"imageUrl":{"type":"string","minLength":1},"type":{"type":"string","enum":["image"]}},"required":["imageUrl","type"]},{"type":"object","properties":{"latitude":{"type":"number"},"longitude":{"type":"number"},"address":{"type":"string"},"title":{"type":"string"},"type":{"type":"string","enum":["location"]}},"required":["latitude","longitude","type"]},{"type":"object","properties":{"markdown":{"type":"string","minLength":1},"type":{"type":"string","enum":["markdown"]}},"required":["markdown","type"]},{"type":"object","properties":{"text":{"type":"string","minLength":1},"type":{"type":"string","enum":["text"]}},"required":["text","type"]},{"type":"object","properties":{"videoUrl":{"type":"string","minLength":1},"type":{"type":"string","enum":["video"]}},"required":["videoUrl","type"]}],"description":"Payload is the content type of the message."},"conversationId":{"type":"string","description":"ID of the [Conversation](#schema_conversation)"}},"required":["payload","conversationId"],"title":"createMessageBody","additionalProperties":false}}}},"tags":["Endpoints"],"summary":"Create Message"}},"/users/me":{"get":{"operationId":"getUser","description":"Retrieves the [User](#schema_user) object for a valid identifier.","parameters":[{"name":"x-user-key","in":"header","description":"Authentication Key","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Returns a [User](#schema_user) object if a valid identifier was provided","content":{"application/json":{"schema":{"type":"object","properties":{"user":{"type":"object","properties":{"id":{"type":"string","description":"Identifier of the [User](#schema_user)"},"name":{"type":"string","description":"Name of the [User](#schema_user)"},"pictureUrl":{"type":"string","description":"Picture url of the [User](#schema_user)"},"profile":{"type":"string","description":"Custom profile data of the [User](#schema_user) encoded as a string"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [User](#schema_user) in ISO 8601 format"},"updatedAt":{"type":"string","format":"date-time","description":"Updating date of the [User](#schema_user) in ISO 8601 format"}},"required":["id","createdAt","updatedAt"],"description":"The user object represents someone interacting with the bot within a specific integration. The same person interacting with a bot in slack and messenger will be represented with two different users.","additionalProperties":false,"x-readme-ref-name":"User"}},"required":["user"],"title":"getUserResponse","additionalProperties":false}}}},"default":{"description":"Returns a [User](#schema_user) object if a valid identifier was provided","content":{"application/json":{"schema":{"type":"object","properties":{"user":{"type":"object","properties":{"id":{"type":"string","description":"Identifier of the [User](#schema_user)"},"name":{"type":"string","description":"Name of the [User](#schema_user)"},"pictureUrl":{"type":"string","description":"Picture url of the [User](#schema_user)"},"profile":{"type":"string","description":"Custom profile data of the [User](#schema_user) encoded as a string"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [User](#schema_user) in ISO 8601 format"},"updatedAt":{"type":"string","format":"date-time","description":"Updating date of the [User](#schema_user) in ISO 8601 format"}},"required":["id","createdAt","updatedAt"],"description":"The user object represents someone interacting with the bot within a specific integration. The same person interacting with a bot in slack and messenger will be represented with two different users.","additionalProperties":false,"x-readme-ref-name":"User"}},"required":["user"],"title":"getUserResponse","additionalProperties":false}}}}},"tags":["Endpoints"],"summary":"Get User"},"put":{"operationId":"updateUser","description":"Update [User](#schema_user)","parameters":[{"name":"x-user-key","in":"header","description":"Authentication Key","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Returns a [User](#schema_user)","content":{"application/json":{"schema":{"type":"object","properties":{"user":{"type":"object","properties":{"id":{"type":"string","description":"Identifier of the [User](#schema_user)"},"name":{"type":"string","description":"Name of the [User](#schema_user)"},"pictureUrl":{"type":"string","description":"Picture url of the [User](#schema_user)"},"profile":{"type":"string","description":"Custom profile data of the [User](#schema_user) encoded as a string"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [User](#schema_user) in ISO 8601 format"},"updatedAt":{"type":"string","format":"date-time","description":"Updating date of the [User](#schema_user) in ISO 8601 format"}},"required":["id","createdAt","updatedAt"],"description":"The user object represents someone interacting with the bot within a specific integration. The same person interacting with a bot in slack and messenger will be represented with two different users.","additionalProperties":false,"x-readme-ref-name":"User"}},"required":["user"],"title":"updateUserResponse","additionalProperties":false}}}},"default":{"description":"Returns a [User](#schema_user)","content":{"application/json":{"schema":{"type":"object","properties":{"user":{"type":"object","properties":{"id":{"type":"string","description":"Identifier of the [User](#schema_user)"},"name":{"type":"string","description":"Name of the [User](#schema_user)"},"pictureUrl":{"type":"string","description":"Picture url of the [User](#schema_user)"},"profile":{"type":"string","description":"Custom profile data of the [User](#schema_user) encoded as a string"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [User](#schema_user) in ISO 8601 format"},"updatedAt":{"type":"string","format":"date-time","description":"Updating date of the [User](#schema_user) in ISO 8601 format"}},"required":["id","createdAt","updatedAt"],"description":"The user object represents someone interacting with the bot within a specific integration. The same person interacting with a bot in slack and messenger will be represented with two different users.","additionalProperties":false,"x-readme-ref-name":"User"}},"required":["user"],"title":"updateUserResponse","additionalProperties":false}}}}},"requestBody":{"description":"User data","content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string","description":"Name of the [User](#schema_user) (not a unique identifier)"},"pictureUrl":{"type":"string","description":"Picture url of the [User](#schema_user)"},"profile":{"type":"string","maxLength":1000,"description":"Custom profile data of the [User](#schema_user) encoded as a string"}},"title":"updateUserBody","additionalProperties":false}}}},"tags":["Endpoints"],"summary":"Update User"},"delete":{"operationId":"deleteUser","description":"Permanently deletes a [User](#schema_user). It cannot be undone.","parameters":[{"name":"x-user-key","in":"header","description":"Authentication Key","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Returns the [User](#schema_user) object that was deleted","content":{"application/json":{"schema":{"type":"object","title":"deleteUserResponse","additionalProperties":false}}}},"default":{"description":"Returns the [User](#schema_user) object that was deleted","content":{"application/json":{"schema":{"type":"object","title":"deleteUserResponse","additionalProperties":false}}}}},"tags":["Endpoints"],"summary":"Delete User"}},"/users":{"post":{"operationId":"createUser","description":"Creates a new [User](#schema_user). This operation can only be called when using the shared encryption key.","parameters":[],"responses":{"201":{"description":"Returns a [User](#schema_user)","content":{"application/json":{"schema":{"type":"object","properties":{"user":{"type":"object","properties":{"id":{"type":"string","description":"Identifier of the [User](#schema_user)"},"name":{"type":"string","description":"Name of the [User](#schema_user)"},"pictureUrl":{"type":"string","description":"Picture url of the [User](#schema_user)"},"profile":{"type":"string","description":"Custom profile data of the [User](#schema_user) encoded as a string"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [User](#schema_user) in ISO 8601 format"},"updatedAt":{"type":"string","format":"date-time","description":"Updating date of the [User](#schema_user) in ISO 8601 format"}},"required":["id","createdAt","updatedAt"],"description":"The user object represents someone interacting with the bot within a specific integration. The same person interacting with a bot in slack and messenger will be represented with two different users.","additionalProperties":false,"x-readme-ref-name":"User"},"key":{"type":"string"}},"required":["user","key"],"title":"createUserResponse","additionalProperties":false}}}},"default":{"description":"Returns a [User](#schema_user)","content":{"application/json":{"schema":{"type":"object","properties":{"user":{"type":"object","properties":{"id":{"type":"string","description":"Identifier of the [User](#schema_user)"},"name":{"type":"string","description":"Name of the [User](#schema_user)"},"pictureUrl":{"type":"string","description":"Picture url of the [User](#schema_user)"},"profile":{"type":"string","description":"Custom profile data of the [User](#schema_user) encoded as a string"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [User](#schema_user) in ISO 8601 format"},"updatedAt":{"type":"string","format":"date-time","description":"Updating date of the [User](#schema_user) in ISO 8601 format"}},"required":["id","createdAt","updatedAt"],"description":"The user object represents someone interacting with the bot within a specific integration. The same person interacting with a bot in slack and messenger will be represented with two different users.","additionalProperties":false,"x-readme-ref-name":"User"},"key":{"type":"string"}},"required":["user","key"],"title":"createUserResponse","additionalProperties":false}}}}},"requestBody":{"description":"User data","content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string","description":"Name of the [User](#schema_user) (not a unique identifier)"},"pictureUrl":{"type":"string","description":"Picture url of the [User](#schema_user)"},"profile":{"type":"string","maxLength":1000,"description":"Custom profile data of the [User](#schema_user) encoded as a string"},"id":{"type":"string","description":"Identifier of the [User](#schema_user)"}},"title":"createUserBody","additionalProperties":false}}}},"tags":["Endpoints"],"summary":"Create User"}},"/users/get-or-create":{"post":{"operationId":"getOrCreateUser","description":"Get or create a new [User](#schema_user)","parameters":[{"name":"x-user-key","in":"header","description":"Authentication Key","required":true,"schema":{"type":"string"}}],"responses":{"201":{"description":"Returns a [User](#schema_user)","content":{"application/json":{"schema":{"type":"object","properties":{"user":{"type":"object","properties":{"id":{"type":"string","description":"Identifier of the [User](#schema_user)"},"name":{"type":"string","description":"Name of the [User](#schema_user)"},"pictureUrl":{"type":"string","description":"Picture url of the [User](#schema_user)"},"profile":{"type":"string","description":"Custom profile data of the [User](#schema_user) encoded as a string"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [User](#schema_user) in ISO 8601 format"},"updatedAt":{"type":"string","format":"date-time","description":"Updating date of the [User](#schema_user) in ISO 8601 format"}},"required":["id","createdAt","updatedAt"],"description":"The user object represents someone interacting with the bot within a specific integration. The same person interacting with a bot in slack and messenger will be represented with two different users.","additionalProperties":false,"x-readme-ref-name":"User"}},"required":["user"],"title":"getOrCreateUserResponse","additionalProperties":false}}}},"default":{"description":"Returns a [User](#schema_user)","content":{"application/json":{"schema":{"type":"object","properties":{"user":{"type":"object","properties":{"id":{"type":"string","description":"Identifier of the [User](#schema_user)"},"name":{"type":"string","description":"Name of the [User](#schema_user)"},"pictureUrl":{"type":"string","description":"Picture url of the [User](#schema_user)"},"profile":{"type":"string","description":"Custom profile data of the [User](#schema_user) encoded as a string"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [User](#schema_user) in ISO 8601 format"},"updatedAt":{"type":"string","format":"date-time","description":"Updating date of the [User](#schema_user) in ISO 8601 format"}},"required":["id","createdAt","updatedAt"],"description":"The user object represents someone interacting with the bot within a specific integration. The same person interacting with a bot in slack and messenger will be represented with two different users.","additionalProperties":false,"x-readme-ref-name":"User"}},"required":["user"],"title":"getOrCreateUserResponse","additionalProperties":false}}}}},"requestBody":{"description":"User data","content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string","description":"Name of the [User](#schema_user) (not a unique identifier)"},"pictureUrl":{"type":"string","description":"Picture url of the [User](#schema_user)"},"profile":{"type":"string","maxLength":1000,"description":"Custom profile data of the [User](#schema_user) encoded as a string"}},"title":"getOrCreateUserBody","additionalProperties":false}}}},"tags":["Endpoints"],"summary":"Get Or Create User"}},"/events/{id}":{"get":{"operationId":"getEvent","description":"Retrieves the [Event](#schema_event) object for a valid identifier.","parameters":[{"name":"x-user-key","in":"header","description":"Authentication Key","required":true,"schema":{"type":"string"}},{"name":"id","in":"path","description":"Id of the Event","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Returns an [Event](#schema_event) object if a valid identifier was provided","content":{"application/json":{"schema":{"type":"object","properties":{"event":{"type":"object","properties":{"id":{"type":"string","description":"ID of the custom [Event](#schema_event)."},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the custom [Event](#schema_event) in ISO 8601 format"},"payload":{"type":"object","additionalProperties":{},"description":"Payload is the content of the custom event."},"conversationId":{"type":"string","description":"ID of the [Conversation](#schema_conversation)."},"userId":{"type":"string","description":"ID of the [User](#schema_user)."}},"required":["id","createdAt","payload","conversationId","userId"],"additionalProperties":false,"x-readme-ref-name":"Event"}},"required":["event"],"title":"getEventResponse","additionalProperties":false}}}},"default":{"description":"Returns an [Event](#schema_event) object if a valid identifier was provided","content":{"application/json":{"schema":{"type":"object","properties":{"event":{"type":"object","properties":{"id":{"type":"string","description":"ID of the custom [Event](#schema_event)."},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the custom [Event](#schema_event) in ISO 8601 format"},"payload":{"type":"object","additionalProperties":{},"description":"Payload is the content of the custom event."},"conversationId":{"type":"string","description":"ID of the [Conversation](#schema_conversation)."},"userId":{"type":"string","description":"ID of the [User](#schema_user)."}},"required":["id","createdAt","payload","conversationId","userId"],"additionalProperties":false,"x-readme-ref-name":"Event"}},"required":["event"],"title":"getEventResponse","additionalProperties":false}}}}},"tags":["Endpoints"],"summary":"Get Event"}},"/events":{"post":{"operationId":"createEvent","description":"Creates a custom [Event](#schema_event)","parameters":[{"name":"x-user-key","in":"header","description":"Authentication Key","required":true,"schema":{"type":"string"}}],"responses":{"201":{"description":"Returns a [Event](#schema_event).","content":{"application/json":{"schema":{"type":"object","properties":{"event":{"type":"object","properties":{"id":{"type":"string","description":"ID of the custom [Event](#schema_event)."},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the custom [Event](#schema_event) in ISO 8601 format"},"payload":{"type":"object","additionalProperties":{},"description":"Payload is the content of the custom event."},"conversationId":{"type":"string","description":"ID of the [Conversation](#schema_conversation)."},"userId":{"type":"string","description":"ID of the [User](#schema_user)."}},"required":["id","createdAt","payload","conversationId","userId"],"additionalProperties":false,"x-readme-ref-name":"Event"}},"required":["event"],"title":"createEventResponse","additionalProperties":false}}}},"default":{"description":"Returns a [Event](#schema_event).","content":{"application/json":{"schema":{"type":"object","properties":{"event":{"type":"object","properties":{"id":{"type":"string","description":"ID of the custom [Event](#schema_event)."},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the custom [Event](#schema_event) in ISO 8601 format"},"payload":{"type":"object","additionalProperties":{},"description":"Payload is the content of the custom event."},"conversationId":{"type":"string","description":"ID of the [Conversation](#schema_conversation)."},"userId":{"type":"string","description":"ID of the [User](#schema_user)."}},"required":["id","createdAt","payload","conversationId","userId"],"additionalProperties":false,"x-readme-ref-name":"Event"}},"required":["event"],"title":"createEventResponse","additionalProperties":false}}}}},"requestBody":{"description":"Event data","content":{"application/json":{"schema":{"type":"object","properties":{"payload":{"type":"object","additionalProperties":{},"description":"Payload is the content of the custom event."},"conversationId":{"type":"string","description":"ID of the [Conversation](#schema_conversation)"}},"required":["payload","conversationId"],"title":"createEventBody","additionalProperties":false}}}},"tags":["Endpoints"],"summary":"Create Event"}}},"components":{"schemas":{"User":{"type":"object","properties":{"id":{"type":"string","description":"Identifier of the [User](#schema_user)"},"name":{"type":"string","description":"Name of the [User](#schema_user)"},"pictureUrl":{"type":"string","description":"Picture url of the [User](#schema_user)"},"profile":{"type":"string","description":"Custom profile data of the [User](#schema_user) encoded as a string"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [User](#schema_user) in ISO 8601 format"},"updatedAt":{"type":"string","format":"date-time","description":"Updating date of the [User](#schema_user) in ISO 8601 format"}},"required":["id","createdAt","updatedAt"],"description":"The user object represents someone interacting with the bot within a specific integration. The same person interacting with a bot in slack and messenger will be represented with two different users.","additionalProperties":false,"x-readme-ref-name":"User"},"Conversation":{"type":"object","properties":{"id":{"type":"string","description":"Identifier of the [Conversation](#schema_conversation)"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [Conversation](#schema_conversation) in ISO 8601 format"},"updatedAt":{"type":"string","format":"date-time","description":"Updating date of the [Conversation](#schema_conversation) in ISO 8601 format"}},"required":["id","createdAt","updatedAt"],"additionalProperties":false,"x-readme-ref-name":"Conversation"},"Message":{"type":"object","properties":{"id":{"type":"string","description":"Identifier of the [Message](#schema_message)"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [Message](#schema_message) in ISO 8601 format"},"payload":{"oneOf":[{"type":"object","properties":{"audioUrl":{"type":"string","minLength":1},"type":{"type":"string","enum":["audio"]}},"required":["audioUrl","type"]},{"type":"object","properties":{"title":{"type":"string","minLength":1},"subtitle":{"type":"string","minLength":1},"imageUrl":{"type":"string","minLength":1},"actions":{"type":"array","items":{"type":"object","properties":{"action":{"type":"string","enum":["postback","url","say"]},"label":{"type":"string","minLength":1},"value":{"type":"string","minLength":1}},"required":["action","label","value"]}},"type":{"type":"string","enum":["card"]}},"required":["title","actions","type"]},{"type":"object","properties":{"items":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","minLength":1},"subtitle":{"type":"string","minLength":1},"imageUrl":{"type":"string","minLength":1},"actions":{"type":"array","items":{"type":"object","properties":{"action":{"type":"string","enum":["postback","url","say"]},"label":{"type":"string","minLength":1},"value":{"type":"string","minLength":1}},"required":["action","label","value"]}}},"required":["title","actions"]}},"type":{"type":"string","enum":["carousel"]}},"required":["items","type"]},{"type":"object","properties":{"text":{"type":"string","minLength":1},"options":{"type":"array","items":{"type":"object","properties":{"label":{"type":"string","minLength":1},"value":{"type":"string","minLength":1}},"required":["label","value"]}},"type":{"type":"string","enum":["choice"]}},"required":["text","options","type"]},{"type":"object","properties":{"text":{"type":"string","minLength":1},"options":{"type":"array","items":{"type":"object","properties":{"label":{"type":"string","minLength":1},"value":{"type":"string","minLength":1}},"required":["label","value"]}},"type":{"type":"string","enum":["dropdown"]}},"required":["text","options","type"]},{"type":"object","properties":{"fileUrl":{"type":"string","minLength":1},"title":{"type":"string","minLength":1},"type":{"type":"string","enum":["file"]}},"required":["fileUrl","type"]},{"type":"object","properties":{"imageUrl":{"type":"string","minLength":1},"type":{"type":"string","enum":["image"]}},"required":["imageUrl","type"]},{"type":"object","properties":{"latitude":{"type":"number"},"longitude":{"type":"number"},"address":{"type":"string"},"title":{"type":"string"},"type":{"type":"string","enum":["location"]}},"required":["latitude","longitude","type"]},{"type":"object","properties":{"markdown":{"type":"string","minLength":1},"type":{"type":"string","enum":["markdown"]}},"required":["markdown","type"]},{"type":"object","properties":{"text":{"type":"string","minLength":1},"type":{"type":"string","enum":["text"]}},"required":["text","type"]},{"type":"object","properties":{"videoUrl":{"type":"string","minLength":1},"type":{"type":"string","enum":["video"]}},"required":["videoUrl","type"]}],"description":"Payload is the content type of the message."},"userId":{"type":"string","description":"ID of the [User](#schema_user)"},"conversationId":{"type":"string","description":"ID of the [Conversation](#schema_conversation)"}},"required":["id","createdAt","payload","userId","conversationId"],"description":"The Message object represents a message in a [Conversation](#schema_conversation) for a specific [User](#schema_user).","additionalProperties":false,"x-readme-ref-name":"Message"},"Event":{"type":"object","properties":{"id":{"type":"string","description":"ID of the custom [Event](#schema_event)."},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the custom [Event](#schema_event) in ISO 8601 format"},"payload":{"type":"object","additionalProperties":{},"description":"Payload is the content of the custom event."},"conversationId":{"type":"string","description":"ID of the [Conversation](#schema_conversation)."},"userId":{"type":"string","description":"ID of the [User](#schema_user)."}},"required":["id","createdAt","payload","conversationId","userId"],"additionalProperties":false,"x-readme-ref-name":"Event"}},"responses":{"getConversationResponse":{"description":"Returns a [Conversation](#schema_conversation) object if a valid identifier was provided","content":{"application/json":{"schema":{"type":"object","properties":{"conversation":{"type":"object","properties":{"id":{"type":"string","description":"Identifier of the [Conversation](#schema_conversation)"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [Conversation](#schema_conversation) in ISO 8601 format"},"updatedAt":{"type":"string","format":"date-time","description":"Updating date of the [Conversation](#schema_conversation) in ISO 8601 format"}},"required":["id","createdAt","updatedAt"],"additionalProperties":false,"x-readme-ref-name":"Conversation"}},"required":["conversation"],"title":"getConversationResponse","additionalProperties":false}}}},"createConversationResponse":{"description":"Returns a [Conversation](#schema_conversation)","content":{"application/json":{"schema":{"type":"object","properties":{"conversation":{"type":"object","properties":{"id":{"type":"string","description":"Identifier of the [Conversation](#schema_conversation)"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [Conversation](#schema_conversation) in ISO 8601 format"},"updatedAt":{"type":"string","format":"date-time","description":"Updating date of the [Conversation](#schema_conversation) in ISO 8601 format"}},"required":["id","createdAt","updatedAt"],"additionalProperties":false,"x-readme-ref-name":"Conversation"}},"required":["conversation"],"title":"createConversationResponse","additionalProperties":false}}}},"getOrCreateConversationResponse":{"description":"Returns a [Conversation](#schema_conversation)","content":{"application/json":{"schema":{"type":"object","properties":{"conversation":{"type":"object","properties":{"id":{"type":"string","description":"Identifier of the [Conversation](#schema_conversation)"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [Conversation](#schema_conversation) in ISO 8601 format"},"updatedAt":{"type":"string","format":"date-time","description":"Updating date of the [Conversation](#schema_conversation) in ISO 8601 format"}},"required":["id","createdAt","updatedAt"],"additionalProperties":false,"x-readme-ref-name":"Conversation"}},"required":["conversation"],"title":"getOrCreateConversationResponse","additionalProperties":false}}}},"deleteConversationResponse":{"description":"Returns the [Conversation](#schema_conversation) object that was deleted","content":{"application/json":{"schema":{"type":"object","title":"deleteConversationResponse","additionalProperties":false}}}},"listConversationsResponse":{"description":"Returns a list of [Conversation](#schema_conversation) objects","content":{"application/json":{"schema":{"type":"object","properties":{"conversations":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","description":"Identifier of the [Conversation](#schema_conversation)"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [Conversation](#schema_conversation) in ISO 8601 format"},"updatedAt":{"type":"string","format":"date-time","description":"Updating date of the [Conversation](#schema_conversation) in ISO 8601 format"}},"required":["id","createdAt","updatedAt"]}},"meta":{"type":"object","properties":{"nextToken":{"type":"string","description":"The token to use to retrieve the next page of results, passed as a query string parameter (value should be URL-encoded) to this API endpoint."}},"additionalProperties":false}},"required":["conversations","meta"],"title":"listConversationsResponse","additionalProperties":false}}}},"listenConversationResponse":{"description":"Returns nothing but a stream","content":{"application/json":{"schema":{"type":"object","title":"listenConversationResponse","additionalProperties":false}}}},"listMessagesResponse":{"description":"Returns a list of [Message](#schema_message) objects","content":{"application/json":{"schema":{"type":"object","properties":{"messages":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","description":"Identifier of the [Message](#schema_message)"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [Message](#schema_message) in ISO 8601 format"},"payload":{"oneOf":[{"type":"object","properties":{"audioUrl":{"type":"string","minLength":1},"type":{"type":"string","enum":["audio"]}},"required":["audioUrl","type"]},{"type":"object","properties":{"title":{"type":"string","minLength":1},"subtitle":{"type":"string","minLength":1},"imageUrl":{"type":"string","minLength":1},"actions":{"type":"array","items":{"type":"object","properties":{"action":{"type":"string","enum":["postback","url","say"]},"label":{"type":"string","minLength":1},"value":{"type":"string","minLength":1}},"required":["action","label","value"]}},"type":{"type":"string","enum":["card"]}},"required":["title","actions","type"]},{"type":"object","properties":{"items":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","minLength":1},"subtitle":{"type":"string","minLength":1},"imageUrl":{"type":"string","minLength":1},"actions":{"type":"array","items":{"type":"object","properties":{"action":{"type":"string","enum":["postback","url","say"]},"label":{"type":"string","minLength":1},"value":{"type":"string","minLength":1}},"required":["action","label","value"]}}},"required":["title","actions"]}},"type":{"type":"string","enum":["carousel"]}},"required":["items","type"]},{"type":"object","properties":{"text":{"type":"string","minLength":1},"options":{"type":"array","items":{"type":"object","properties":{"label":{"type":"string","minLength":1},"value":{"type":"string","minLength":1}},"required":["label","value"]}},"type":{"type":"string","enum":["choice"]}},"required":["text","options","type"]},{"type":"object","properties":{"text":{"type":"string","minLength":1},"options":{"type":"array","items":{"type":"object","properties":{"label":{"type":"string","minLength":1},"value":{"type":"string","minLength":1}},"required":["label","value"]}},"type":{"type":"string","enum":["dropdown"]}},"required":["text","options","type"]},{"type":"object","properties":{"fileUrl":{"type":"string","minLength":1},"title":{"type":"string","minLength":1},"type":{"type":"string","enum":["file"]}},"required":["fileUrl","type"]},{"type":"object","properties":{"imageUrl":{"type":"string","minLength":1},"type":{"type":"string","enum":["image"]}},"required":["imageUrl","type"]},{"type":"object","properties":{"latitude":{"type":"number"},"longitude":{"type":"number"},"address":{"type":"string"},"title":{"type":"string"},"type":{"type":"string","enum":["location"]}},"required":["latitude","longitude","type"]},{"type":"object","properties":{"markdown":{"type":"string","minLength":1},"type":{"type":"string","enum":["markdown"]}},"required":["markdown","type"]},{"type":"object","properties":{"text":{"type":"string","minLength":1},"type":{"type":"string","enum":["text"]}},"required":["text","type"]},{"type":"object","properties":{"videoUrl":{"type":"string","minLength":1},"type":{"type":"string","enum":["video"]}},"required":["videoUrl","type"]}],"description":"Payload is the content type of the message."},"userId":{"type":"string","description":"ID of the [User](#schema_user)"},"conversationId":{"type":"string","description":"ID of the [Conversation](#schema_conversation)"}},"required":["id","createdAt","payload","userId","conversationId"],"description":"The Message object represents a message in a [Conversation](#schema_conversation) for a specific [User](#schema_user).","additionalProperties":false,"x-readme-ref-name":"Message"}},"meta":{"type":"object","properties":{"nextToken":{"type":"string","description":"The token to use to retrieve the next page of results, passed as a query string parameter (value should be URL-encoded) to this API endpoint."}},"additionalProperties":false}},"required":["messages","meta"],"title":"listMessagesResponse","additionalProperties":false}}}},"addParticipantResponse":{"description":"Returns the [Participant](#schema_user) object","content":{"application/json":{"schema":{"type":"object","properties":{"participant":{"type":"object","properties":{"id":{"type":"string","description":"Identifier of the [User](#schema_user)"},"name":{"type":"string","description":"Name of the [User](#schema_user)"},"pictureUrl":{"type":"string","description":"Picture url of the [User](#schema_user)"},"profile":{"type":"string","description":"Custom profile data of the [User](#schema_user) encoded as a string"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [User](#schema_user) in ISO 8601 format"},"updatedAt":{"type":"string","format":"date-time","description":"Updating date of the [User](#schema_user) in ISO 8601 format"}},"required":["id","createdAt","updatedAt"],"description":"The user object represents someone interacting with the bot within a specific integration. The same person interacting with a bot in slack and messenger will be represented with two different users.","additionalProperties":false,"x-readme-ref-name":"User"}},"required":["participant"],"title":"addParticipantResponse","additionalProperties":false}}}},"removeParticipantResponse":{"description":"Returns an empty object","content":{"application/json":{"schema":{"type":"object","title":"removeParticipantResponse","additionalProperties":false}}}},"getParticipantResponse":{"description":"Returns the [Participant](#schema_user) object","content":{"application/json":{"schema":{"type":"object","properties":{"participant":{"type":"object","properties":{"id":{"type":"string","description":"Identifier of the [User](#schema_user)"},"name":{"type":"string","description":"Name of the [User](#schema_user)"},"pictureUrl":{"type":"string","description":"Picture url of the [User](#schema_user)"},"profile":{"type":"string","description":"Custom profile data of the [User](#schema_user) encoded as a string"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [User](#schema_user) in ISO 8601 format"},"updatedAt":{"type":"string","format":"date-time","description":"Updating date of the [User](#schema_user) in ISO 8601 format"}},"required":["id","createdAt","updatedAt"],"description":"The user object represents someone interacting with the bot within a specific integration. The same person interacting with a bot in slack and messenger will be represented with two different users.","additionalProperties":false,"x-readme-ref-name":"User"}},"required":["participant"],"title":"getParticipantResponse","additionalProperties":false}}}},"listParticipantsResponse":{"description":"Returns a list of [Participants](#schema_user) objects","content":{"application/json":{"schema":{"type":"object","properties":{"participants":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","description":"Identifier of the [User](#schema_user)"},"name":{"type":"string","description":"Name of the [User](#schema_user)"},"pictureUrl":{"type":"string","description":"Picture url of the [User](#schema_user)"},"profile":{"type":"string","description":"Custom profile data of the [User](#schema_user) encoded as a string"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [User](#schema_user) in ISO 8601 format"},"updatedAt":{"type":"string","format":"date-time","description":"Updating date of the [User](#schema_user) in ISO 8601 format"}},"required":["id","createdAt","updatedAt"],"description":"The user object represents someone interacting with the bot within a specific integration. The same person interacting with a bot in slack and messenger will be represented with two different users.","additionalProperties":false,"x-readme-ref-name":"User"}},"meta":{"type":"object","properties":{"nextToken":{"type":"string","description":"The token to use to retrieve the next page of results, passed as a query string parameter (value should be URL-encoded) to this API endpoint."}},"additionalProperties":false}},"required":["participants","meta"],"title":"listParticipantsResponse","additionalProperties":false}}}},"getMessageResponse":{"description":"Returns a [Message](#schema_message) object if a valid identifier was provided","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"object","properties":{"id":{"type":"string","description":"Identifier of the [Message](#schema_message)"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [Message](#schema_message) in ISO 8601 format"},"payload":{"oneOf":[{"type":"object","properties":{"audioUrl":{"type":"string","minLength":1},"type":{"type":"string","enum":["audio"]}},"required":["audioUrl","type"]},{"type":"object","properties":{"title":{"type":"string","minLength":1},"subtitle":{"type":"string","minLength":1},"imageUrl":{"type":"string","minLength":1},"actions":{"type":"array","items":{"type":"object","properties":{"action":{"type":"string","enum":["postback","url","say"]},"label":{"type":"string","minLength":1},"value":{"type":"string","minLength":1}},"required":["action","label","value"]}},"type":{"type":"string","enum":["card"]}},"required":["title","actions","type"]},{"type":"object","properties":{"items":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","minLength":1},"subtitle":{"type":"string","minLength":1},"imageUrl":{"type":"string","minLength":1},"actions":{"type":"array","items":{"type":"object","properties":{"action":{"type":"string","enum":["postback","url","say"]},"label":{"type":"string","minLength":1},"value":{"type":"string","minLength":1}},"required":["action","label","value"]}}},"required":["title","actions"]}},"type":{"type":"string","enum":["carousel"]}},"required":["items","type"]},{"type":"object","properties":{"text":{"type":"string","minLength":1},"options":{"type":"array","items":{"type":"object","properties":{"label":{"type":"string","minLength":1},"value":{"type":"string","minLength":1}},"required":["label","value"]}},"type":{"type":"string","enum":["choice"]}},"required":["text","options","type"]},{"type":"object","properties":{"text":{"type":"string","minLength":1},"options":{"type":"array","items":{"type":"object","properties":{"label":{"type":"string","minLength":1},"value":{"type":"string","minLength":1}},"required":["label","value"]}},"type":{"type":"string","enum":["dropdown"]}},"required":["text","options","type"]},{"type":"object","properties":{"fileUrl":{"type":"string","minLength":1},"title":{"type":"string","minLength":1},"type":{"type":"string","enum":["file"]}},"required":["fileUrl","type"]},{"type":"object","properties":{"imageUrl":{"type":"string","minLength":1},"type":{"type":"string","enum":["image"]}},"required":["imageUrl","type"]},{"type":"object","properties":{"latitude":{"type":"number"},"longitude":{"type":"number"},"address":{"type":"string"},"title":{"type":"string"},"type":{"type":"string","enum":["location"]}},"required":["latitude","longitude","type"]},{"type":"object","properties":{"markdown":{"type":"string","minLength":1},"type":{"type":"string","enum":["markdown"]}},"required":["markdown","type"]},{"type":"object","properties":{"text":{"type":"string","minLength":1},"type":{"type":"string","enum":["text"]}},"required":["text","type"]},{"type":"object","properties":{"videoUrl":{"type":"string","minLength":1},"type":{"type":"string","enum":["video"]}},"required":["videoUrl","type"]}],"description":"Payload is the content type of the message."},"userId":{"type":"string","description":"ID of the [User](#schema_user)"},"conversationId":{"type":"string","description":"ID of the [Conversation](#schema_conversation)"}},"required":["id","createdAt","payload","userId","conversationId"],"description":"The Message object represents a message in a [Conversation](#schema_conversation) for a specific [User](#schema_user).","additionalProperties":false,"x-readme-ref-name":"Message"}},"required":["message"],"title":"getMessageResponse","additionalProperties":false}}}},"createMessageResponse":{"description":"Returns a [Message](#schema_message).","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"object","properties":{"id":{"type":"string","description":"Identifier of the [Message](#schema_message)"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [Message](#schema_message) in ISO 8601 format"},"payload":{"oneOf":[{"type":"object","properties":{"audioUrl":{"type":"string","minLength":1},"type":{"type":"string","enum":["audio"]}},"required":["audioUrl","type"]},{"type":"object","properties":{"title":{"type":"string","minLength":1},"subtitle":{"type":"string","minLength":1},"imageUrl":{"type":"string","minLength":1},"actions":{"type":"array","items":{"type":"object","properties":{"action":{"type":"string","enum":["postback","url","say"]},"label":{"type":"string","minLength":1},"value":{"type":"string","minLength":1}},"required":["action","label","value"]}},"type":{"type":"string","enum":["card"]}},"required":["title","actions","type"]},{"type":"object","properties":{"items":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","minLength":1},"subtitle":{"type":"string","minLength":1},"imageUrl":{"type":"string","minLength":1},"actions":{"type":"array","items":{"type":"object","properties":{"action":{"type":"string","enum":["postback","url","say"]},"label":{"type":"string","minLength":1},"value":{"type":"string","minLength":1}},"required":["action","label","value"]}}},"required":["title","actions"]}},"type":{"type":"string","enum":["carousel"]}},"required":["items","type"]},{"type":"object","properties":{"text":{"type":"string","minLength":1},"options":{"type":"array","items":{"type":"object","properties":{"label":{"type":"string","minLength":1},"value":{"type":"string","minLength":1}},"required":["label","value"]}},"type":{"type":"string","enum":["choice"]}},"required":["text","options","type"]},{"type":"object","properties":{"text":{"type":"string","minLength":1},"options":{"type":"array","items":{"type":"object","properties":{"label":{"type":"string","minLength":1},"value":{"type":"string","minLength":1}},"required":["label","value"]}},"type":{"type":"string","enum":["dropdown"]}},"required":["text","options","type"]},{"type":"object","properties":{"fileUrl":{"type":"string","minLength":1},"title":{"type":"string","minLength":1},"type":{"type":"string","enum":["file"]}},"required":["fileUrl","type"]},{"type":"object","properties":{"imageUrl":{"type":"string","minLength":1},"type":{"type":"string","enum":["image"]}},"required":["imageUrl","type"]},{"type":"object","properties":{"latitude":{"type":"number"},"longitude":{"type":"number"},"address":{"type":"string"},"title":{"type":"string"},"type":{"type":"string","enum":["location"]}},"required":["latitude","longitude","type"]},{"type":"object","properties":{"markdown":{"type":"string","minLength":1},"type":{"type":"string","enum":["markdown"]}},"required":["markdown","type"]},{"type":"object","properties":{"text":{"type":"string","minLength":1},"type":{"type":"string","enum":["text"]}},"required":["text","type"]},{"type":"object","properties":{"videoUrl":{"type":"string","minLength":1},"type":{"type":"string","enum":["video"]}},"required":["videoUrl","type"]}],"description":"Payload is the content type of the message."},"userId":{"type":"string","description":"ID of the [User](#schema_user)"},"conversationId":{"type":"string","description":"ID of the [Conversation](#schema_conversation)"}},"required":["id","createdAt","payload","userId","conversationId"],"description":"The Message object represents a message in a [Conversation](#schema_conversation) for a specific [User](#schema_user).","additionalProperties":false,"x-readme-ref-name":"Message"}},"required":["message"],"title":"createMessageResponse","additionalProperties":false}}}},"deleteMessageResponse":{"description":"Returns the [Message](#schema_message) object that was deleted","content":{"application/json":{"schema":{"type":"object","title":"deleteMessageResponse","additionalProperties":false}}}},"getUserResponse":{"description":"Returns a [User](#schema_user) object if a valid identifier was provided","content":{"application/json":{"schema":{"type":"object","properties":{"user":{"type":"object","properties":{"id":{"type":"string","description":"Identifier of the [User](#schema_user)"},"name":{"type":"string","description":"Name of the [User](#schema_user)"},"pictureUrl":{"type":"string","description":"Picture url of the [User](#schema_user)"},"profile":{"type":"string","description":"Custom profile data of the [User](#schema_user) encoded as a string"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [User](#schema_user) in ISO 8601 format"},"updatedAt":{"type":"string","format":"date-time","description":"Updating date of the [User](#schema_user) in ISO 8601 format"}},"required":["id","createdAt","updatedAt"],"description":"The user object represents someone interacting with the bot within a specific integration. The same person interacting with a bot in slack and messenger will be represented with two different users.","additionalProperties":false,"x-readme-ref-name":"User"}},"required":["user"],"title":"getUserResponse","additionalProperties":false}}}},"createUserResponse":{"description":"Returns a [User](#schema_user)","content":{"application/json":{"schema":{"type":"object","properties":{"user":{"type":"object","properties":{"id":{"type":"string","description":"Identifier of the [User](#schema_user)"},"name":{"type":"string","description":"Name of the [User](#schema_user)"},"pictureUrl":{"type":"string","description":"Picture url of the [User](#schema_user)"},"profile":{"type":"string","description":"Custom profile data of the [User](#schema_user) encoded as a string"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [User](#schema_user) in ISO 8601 format"},"updatedAt":{"type":"string","format":"date-time","description":"Updating date of the [User](#schema_user) in ISO 8601 format"}},"required":["id","createdAt","updatedAt"],"description":"The user object represents someone interacting with the bot within a specific integration. The same person interacting with a bot in slack and messenger will be represented with two different users.","additionalProperties":false,"x-readme-ref-name":"User"},"key":{"type":"string"}},"required":["user","key"],"title":"createUserResponse","additionalProperties":false}}}},"getOrCreateUserResponse":{"description":"Returns a [User](#schema_user)","content":{"application/json":{"schema":{"type":"object","properties":{"user":{"type":"object","properties":{"id":{"type":"string","description":"Identifier of the [User](#schema_user)"},"name":{"type":"string","description":"Name of the [User](#schema_user)"},"pictureUrl":{"type":"string","description":"Picture url of the [User](#schema_user)"},"profile":{"type":"string","description":"Custom profile data of the [User](#schema_user) encoded as a string"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [User](#schema_user) in ISO 8601 format"},"updatedAt":{"type":"string","format":"date-time","description":"Updating date of the [User](#schema_user) in ISO 8601 format"}},"required":["id","createdAt","updatedAt"],"description":"The user object represents someone interacting with the bot within a specific integration. The same person interacting with a bot in slack and messenger will be represented with two different users.","additionalProperties":false,"x-readme-ref-name":"User"}},"required":["user"],"title":"getOrCreateUserResponse","additionalProperties":false}}}},"updateUserResponse":{"description":"Returns a [User](#schema_user)","content":{"application/json":{"schema":{"type":"object","properties":{"user":{"type":"object","properties":{"id":{"type":"string","description":"Identifier of the [User](#schema_user)"},"name":{"type":"string","description":"Name of the [User](#schema_user)"},"pictureUrl":{"type":"string","description":"Picture url of the [User](#schema_user)"},"profile":{"type":"string","description":"Custom profile data of the [User](#schema_user) encoded as a string"},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the [User](#schema_user) in ISO 8601 format"},"updatedAt":{"type":"string","format":"date-time","description":"Updating date of the [User](#schema_user) in ISO 8601 format"}},"required":["id","createdAt","updatedAt"],"description":"The user object represents someone interacting with the bot within a specific integration. The same person interacting with a bot in slack and messenger will be represented with two different users.","additionalProperties":false,"x-readme-ref-name":"User"}},"required":["user"],"title":"updateUserResponse","additionalProperties":false}}}},"deleteUserResponse":{"description":"Returns the [User](#schema_user) object that was deleted","content":{"application/json":{"schema":{"type":"object","title":"deleteUserResponse","additionalProperties":false}}}},"getEventResponse":{"description":"Returns an [Event](#schema_event) object if a valid identifier was provided","content":{"application/json":{"schema":{"type":"object","properties":{"event":{"type":"object","properties":{"id":{"type":"string","description":"ID of the custom [Event](#schema_event)."},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the custom [Event](#schema_event) in ISO 8601 format"},"payload":{"type":"object","additionalProperties":{},"description":"Payload is the content of the custom event."},"conversationId":{"type":"string","description":"ID of the [Conversation](#schema_conversation)."},"userId":{"type":"string","description":"ID of the [User](#schema_user)."}},"required":["id","createdAt","payload","conversationId","userId"],"additionalProperties":false,"x-readme-ref-name":"Event"}},"required":["event"],"title":"getEventResponse","additionalProperties":false}}}},"createEventResponse":{"description":"Returns a [Event](#schema_event).","content":{"application/json":{"schema":{"type":"object","properties":{"event":{"type":"object","properties":{"id":{"type":"string","description":"ID of the custom [Event](#schema_event)."},"createdAt":{"type":"string","format":"date-time","description":"Creation date of the custom [Event](#schema_event) in ISO 8601 format"},"payload":{"type":"object","additionalProperties":{},"description":"Payload is the content of the custom event."},"conversationId":{"type":"string","description":"ID of the [Conversation](#schema_conversation)."},"userId":{"type":"string","description":"ID of the [User](#schema_user)."}},"required":["id","createdAt","payload","conversationId","userId"],"additionalProperties":false,"x-readme-ref-name":"Event"}},"required":["event"],"title":"createEventResponse","additionalProperties":false}}}}},"requestBodies":{"createConversationBody":{"description":"Conversation data","content":{"application/json":{"schema":{"type":"object","properties":{"id":{"type":"string","description":"Identifier of the [Conversation](#schema_conversation)"}},"title":"createConversationBody","additionalProperties":false}}}},"getOrCreateConversationBody":{"description":"Conversation data","content":{"application/json":{"schema":{"type":"object","properties":{"id":{"type":"string","description":"Identifier of the [Conversation](#schema_conversation)"}},"required":["id"],"title":"getOrCreateConversationBody","additionalProperties":false}}}},"addParticipantBody":{"description":"Participant data","content":{"application/json":{"schema":{"type":"object","properties":{"userId":{"type":"string","description":"User id"}},"required":["userId"],"title":"addParticipantBody","additionalProperties":false}}}},"createMessageBody":{"description":"Message data","content":{"application/json":{"schema":{"type":"object","properties":{"payload":{"oneOf":[{"type":"object","properties":{"audioUrl":{"type":"string","minLength":1},"type":{"type":"string","enum":["audio"]}},"required":["audioUrl","type"]},{"type":"object","properties":{"title":{"type":"string","minLength":1},"subtitle":{"type":"string","minLength":1},"imageUrl":{"type":"string","minLength":1},"actions":{"type":"array","items":{"type":"object","properties":{"action":{"type":"string","enum":["postback","url","say"]},"label":{"type":"string","minLength":1},"value":{"type":"string","minLength":1}},"required":["action","label","value"]}},"type":{"type":"string","enum":["card"]}},"required":["title","actions","type"]},{"type":"object","properties":{"items":{"type":"array","items":{"type":"object","properties":{"title":{"type":"string","minLength":1},"subtitle":{"type":"string","minLength":1},"imageUrl":{"type":"string","minLength":1},"actions":{"type":"array","items":{"type":"object","properties":{"action":{"type":"string","enum":["postback","url","say"]},"label":{"type":"string","minLength":1},"value":{"type":"string","minLength":1}},"required":["action","label","value"]}}},"required":["title","actions"]}},"type":{"type":"string","enum":["carousel"]}},"required":["items","type"]},{"type":"object","properties":{"text":{"type":"string","minLength":1},"options":{"type":"array","items":{"type":"object","properties":{"label":{"type":"string","minLength":1},"value":{"type":"string","minLength":1}},"required":["label","value"]}},"type":{"type":"string","enum":["choice"]}},"required":["text","options","type"]},{"type":"object","properties":{"text":{"type":"string","minLength":1},"options":{"type":"array","items":{"type":"object","properties":{"label":{"type":"string","minLength":1},"value":{"type":"string","minLength":1}},"required":["label","value"]}},"type":{"type":"string","enum":["dropdown"]}},"required":["text","options","type"]},{"type":"object","properties":{"fileUrl":{"type":"string","minLength":1},"title":{"type":"string","minLength":1},"type":{"type":"string","enum":["file"]}},"required":["fileUrl","type"]},{"type":"object","properties":{"imageUrl":{"type":"string","minLength":1},"type":{"type":"string","enum":["image"]}},"required":["imageUrl","type"]},{"type":"object","properties":{"latitude":{"type":"number"},"longitude":{"type":"number"},"address":{"type":"string"},"title":{"type":"string"},"type":{"type":"string","enum":["location"]}},"required":["latitude","longitude","type"]},{"type":"object","properties":{"markdown":{"type":"string","minLength":1},"type":{"type":"string","enum":["markdown"]}},"required":["markdown","type"]},{"type":"object","properties":{"text":{"type":"string","minLength":1},"type":{"type":"string","enum":["text"]}},"required":["text","type"]},{"type":"object","properties":{"videoUrl":{"type":"string","minLength":1},"type":{"type":"string","enum":["video"]}},"required":["videoUrl","type"]}],"description":"Payload is the content type of the message."},"conversationId":{"type":"string","description":"ID of the [Conversation](#schema_conversation)"}},"required":["payload","conversationId"],"title":"createMessageBody","additionalProperties":false}}}},"createUserBody":{"description":"User data","content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string","description":"Name of the [User](#schema_user) (not a unique identifier)"},"pictureUrl":{"type":"string","description":"Picture url of the [User](#schema_user)"},"profile":{"type":"string","maxLength":1000,"description":"Custom profile data of the [User](#schema_user) encoded as a string"},"id":{"type":"string","description":"Identifier of the [User](#schema_user)"}},"title":"createUserBody","additionalProperties":false}}}},"getOrCreateUserBody":{"description":"User data","content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string","description":"Name of the [User](#schema_user) (not a unique identifier)"},"pictureUrl":{"type":"string","description":"Picture url of the [User](#schema_user)"},"profile":{"type":"string","maxLength":1000,"description":"Custom profile data of the [User](#schema_user) encoded as a string"}},"title":"getOrCreateUserBody","additionalProperties":false}}}},"updateUserBody":{"description":"User data","content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string","description":"Name of the [User](#schema_user) (not a unique identifier)"},"pictureUrl":{"type":"string","description":"Picture url of the [User](#schema_user)"},"profile":{"type":"string","maxLength":1000,"description":"Custom profile data of the [User](#schema_user) encoded as a string"}},"title":"updateUserBody","additionalProperties":false}}}},"createEventBody":{"description":"Event data","content":{"application/json":{"schema":{"type":"object","properties":{"payload":{"type":"object","additionalProperties":{},"description":"Payload is the content of the custom event."},"conversationId":{"type":"string","description":"ID of the [Conversation](#schema_conversation)"}},"required":["payload","conversationId"],"title":"createEventBody","additionalProperties":false}}}}},"parameters":{"webhookUrl":{"name":"webhookUrl","in":"path","required":true,"schema":{"type":"string"},"description":"The webhook URL"}}},"x-readme":{"explorer-enabled":true,"proxy-enabled":true}}